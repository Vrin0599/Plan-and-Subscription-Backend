generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model address {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  address_line String?   @db.VarChar
  city         String    @db.VarChar
  state        String    @db.VarChar
  country      String    @db.VarChar
  pincode      Int
  is_deleted   Boolean?  @default(false)
  is_active    Boolean?  @default(true)
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  updated_at   DateTime? @default(now()) @db.Timestamp(6)
  created_by   String?   @db.Uuid
  updated_by   String?   @db.Uuid
  company      company[]
}

model company {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String    @db.VarChar
  website    String?   @db.VarChar
  logo       String?   @db.VarChar
  address_id String?   @db.Uuid
  is_deleted Boolean?  @default(false)
  is_active  Boolean?  @default(true)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  created_by String?   @db.Uuid
  updated_by String?   @db.Uuid
  address    address?  @relation(fields: [address_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model feature {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                 String                 @db.VarChar
  is_deleted           Boolean?               @default(false)
  is_active            Boolean?               @default(true)
  created_at           DateTime?              @default(now()) @db.Timestamp(6)
  updated_at           DateTime?              @default(now()) @db.Timestamp(6)
  created_by           String?                @db.Uuid
  updated_by           String?                @db.Uuid
  feature_group_maping feature_group_maping[]
  add_on               add_on[]
}

model feature_group {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                 String                 @db.VarChar
  description          String?                @db.VarChar
  is_deleted           Boolean?               @default(false)
  is_active            Boolean?               @default(true)
  created_at           DateTime?              @default(now()) @db.Timestamp(6)
  updated_at           DateTime?              @default(now()) @db.Timestamp(6)
  created_by           String?                @db.Uuid
  updated_by           String?                @db.Uuid
  feature_group_maping feature_group_maping[]
  add_on               add_on[]
  plans                plans[]
}

model feature_group_maping {
  id               String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  feature_group_id String         @db.Uuid
  feature_id       String         @db.Uuid
  is_deleted       Boolean?       @default(false)
  is_active        Boolean?       @default(true)
  created_at       DateTime?      @default(now()) @db.Timestamp(6)
  updated_at       DateTime?      @default(now()) @db.Timestamp(6)
  created_by       String?        @db.Uuid
  updated_by       String?        @db.Uuid
  feature          feature?       @relation(fields: [feature_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  feature_group    feature_group? @relation(fields: [feature_group_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model add_on {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String                @db.VarChar
  description         String?               @db.VarChar
  feature_group_id    String                @db.Uuid
  feature_id          String                @db.Uuid
  is_deleted          Boolean?              @default(false)
  is_active           Boolean?              @default(true)
  created_at          DateTime?             @default(now()) @db.Timestamp(6)
  updated_at          DateTime?             @default(now()) @db.Timestamp(6)
  created_by          String?               @db.Uuid
  updated_by          String?               @db.Uuid
  feature             feature?              @relation(fields: [feature_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  feature_group       feature_group?        @relation(fields: [feature_group_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  plans               plans[]
  plan_add_on_mapping plan_add_on_mapping[]
}

model charges {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String                @db.VarChar
  description         String?               @db.VarChar
  is_deleted          Boolean?              @default(false)
  is_active           Boolean?              @default(true)
  created_at          DateTime?             @default(now()) @db.Timestamp(6)
  updated_at          DateTime?             @default(now()) @db.Timestamp(6)
  created_by          String?               @db.Uuid
  updated_by          String?               @db.Uuid
  plans               plans[]
  plan_charge_mapping plan_charge_mapping[]
}

model plans {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String                @db.VarChar
  description         String?               @db.VarChar
  is_plan_public      Boolean?              @default(false)
  is_recomended       Boolean?              @default(false)
  is_metered_billing  Boolean?              @default(false)
  billing_period      String[]              @db.VarChar
  price               Json
  is_per_user         Boolean?              @default(false)
  is_flat_fee         Boolean?              @default(false)
  billing_cycles      String                @db.VarChar
  is_deleted          Boolean?              @default(false)
  is_active           Boolean?              @default(true)
  created_at          DateTime?             @default(now()) @db.Timestamp(6)
  updated_at          DateTime?             @default(now()) @db.Timestamp(6)
  created_by          String?               @db.Uuid
  updated_by          String?               @db.Uuid
  plan_add_on_mapping plan_add_on_mapping[]
  plan_charge_mapping plan_charge_mapping[]
  feature_group       feature_group?        @relation(fields: [feature_groupId], references: [id])
  feature_groupId     String?               @db.Uuid
  add_on              add_on?               @relation(fields: [add_onId], references: [id])
  add_onId            String?               @db.Uuid
  charges             charges?              @relation(fields: [chargesId], references: [id])
  chargesId           String?               @db.Uuid
}

model plan_add_on_mapping {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  price       Json
  limit_count Int?
  add_on_id   String    @db.Uuid
  plan_id     String    @db.Uuid
  is_deleted  Boolean?  @default(false)
  is_active   Boolean?  @default(true)
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)
  created_by  String?   @db.Uuid
  updated_by  String?   @db.Uuid
  add_on      add_on?   @relation(fields: [add_on_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  plans       plans?    @relation(fields: [plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model plan_charge_mapping {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  price      Float
  charge_id  String    @db.Uuid
  plan_id    String    @db.Uuid
  is_deleted Boolean?  @default(false)
  is_active  Boolean?  @default(true)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  created_by String?   @db.Uuid
  updated_by String?   @db.Uuid
  charges    charges?  @relation(fields: [charge_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  plans      plans?    @relation(fields: [plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
